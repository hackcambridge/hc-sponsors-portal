/* Variables */
:root {
    --one: 53pt;
    --gutter: 13pt;
    --two: calc(var(--one) * 2);
    --three: calc(var(--one) * 3);
    --four: calc(var(--one) * 4);
    --five: calc(var(--one) * 5);
    --six: calc(var(--one) * 6);
    --seven: calc(var(--one) * 7);
    --eight: calc(var(--one) * 8);
    --nine: calc(var(--one) * 9);
    --ten: calc(var(--one) * 10);
    --eleven: calc(var(--one) * 11);
    --twelve: calc(var(--one) * 12);
    --thirteen: calc(var(--one) * 13);
    --fourteen: calc(var(--one) * 14);
    --half: calc(var(--one) / 2);
}

/* Default unit values */
.unit {
    --initial: 0;
    --second-initial: 100%;
    --base: var(--initial);
    --second-base: var(--second-initial);
}
/* Standard units */
.one.unit {
    --initial: var(--one);
}
.two.unit {
    --initial: var(--two);
}
.three.unit {
    --initial: var(--three);
}
.four.unit {
    --initial: var(--four);
}
.five.unit {
    --initial: var(--five);
}
.six.unit {
    --initial: var(--six);
}
.seven.unit {
    --initial: var(--seven);
}
.eight.unit {
    --initial: var(--eight);
}
.nine.unit {
    --initial: var(--nine);
}
.ten.unit {
    --initial: var(--ten);
}
.eleven.unit {
    --initial: var(--eleven);
}
.twelve.unit {
    --initial: var(--twelve);
}
.thirteen.unit {
    --initial: var(--thirteen);
}
.fourteen.unit {
    --initial: var(--fourteen);
}
/* Second standard units */
.second-one.unit {
    --second-initial: var(--one);
}
.second-two.unit {
    --second-initial: var(--two);
}
.second-three.unit {
    --second-initial: var(--three);
}
.second-four.unit {
    --second-initial: var(--four);
}
.second-five.unit {
    --second-initial: var(--five);
}
.second-six.unit {
    --second-initial: var(--six);
}
.second-seven.unit {
    --second-initial: var(--seven);
}
.second-eight.unit {
    --second-initial: var(--eight);
}
.second-nine.unit {
    --second-initial: var(--nine);
}
.second-ten.unit {
    --second-initial: var(--ten);
}
.second-eleven.unit {
    --second-initial: var(--eleven);
}
.second-twelve.unit {
    --second-initial: var(--twelve);
}
.second-thirteen.unit {
    --second-initial: var(--thirteen);
}
.second-fourteen.unit {
    --second-initial: var(--fourteen);
}
/* Extra units: combining */
.small.unit {
    --base: calc(var(--initial) - var(--gutter));
}
.large.unit {
    --base: calc(var(--initial) + var(--gutter));
}
/* Extra units: combining and standalone */
.half.unit {
    --base: calc(var(--initial) + var(--half));
}

/* Reset margins and padding */
div {
    margin: 0;
    padding: 0;
}

/* Containers */
.container {
    display: flex;
    flex-direction: column;
}
.container.a4 {
    position: relative;
    width: 484pt;
    margin: 0 auto;
}
.container.width {
    margin: 0 var(--one);
}

/* Basic grid */
.row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin: calc(var(--half) * -1);
}
form .row, .body .row {
    display: block;
}
.persistent.row {
    flex-direction: row;
}
.column, .columns {
    margin: var(--half);
}
.column {
    display: flex;
    flex-direction: column;
}
.columns {
    flex-basis: 100%;
}
.unit.column.grows {
    flex-grow: 1;
}
.column > *:not(.row) {
    display: block;
}

form > .column, .content > * {
    margin: calc(var(--gutter) / 2);
}

form.unit.row, .content {
    margin: calc(var(--gutter) / 2 * -1);
}

.large.content > * {
    margin: calc(var(--one) / 2);
}

.large.content {
    margin: calc(var(--one) / 2 * -1);
  }

/* Tables */
th, td {
    min-width: var(--base);
}

@media (max-width: 595pt) {

    .container.a4 {
        width: calc(484 / 595 * 100vw);
    }
    .row:not(section) {
        flex-direction: column;
    }
    .column:empty {
        display: none;
    }
}


@media (min-width: 595pt) {

    .columns {
        column-count: 2;
        column-gap: 24pt;
        column-fill: auto;
        max-height: var(--base);
    }
    .columns.balance {
        column-fill: balance;
    }
    .unit.row {
        min-height: var(--base);
    }

    /* Columns */
    .column {
        flex-grow: 0;
    }
    .unit.column {
        flex-basis: var(--base);
        flex-shrink: 0;
        min-width: min-content;
    }
    .unit.column.fit {
        min-width: max-content;
    }
    .unit.column.grows {
        max-width: var(--second-base);
    }

}
